-- departments 테이블의 모든 행, 모든 열을 조회하기
SELECT *
FROM DEPARTMENTS;

-- departments 테이블의 부서아이디, 부서명을 조회하기
SELECT DEPARTMENT_ID, DEPARTMENT_NAME
FROM DEPARTMENTS;

-- 직원의 아이디, 이름, 급여, 연봉을 조회하기
-- 연봉은 급여*12다.
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, SALARY*12 ANNUAL_SALARY
FROM EMPLOYEES;

-- 직원들이 맡고 있는 업종아이디를 중복없이 조회하기
SELECT DISTINCT JOB_ID
FROM EMPLOYEES;

-- 직원들이 소속된 부서이름을 중복없이 조회하기
SELECT DISTINCT D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT DEPARTMENT_NAME
FROM DEPARTMENTS
WHERE DEPARTMENT_ID IN (SELECT DISTINCT DEPARTMENT_ID
                        FROM EMPLOYEES);

-- 90번 부서에서 근무하고 있는 직원의 아이디, 이름, 직종아이디를 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90;

-- 급여를 15000달러 이상 받는 직원의 아이디, 이름, 급여를 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES 
WHERE SALARY >= 15000;

-- 급여를 2500달러 이상 3500달러 이하로 받는 직원의 아이디, 이름, 급여를 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY >= 2500 AND SALARY <= 3500;

-- 커미션을 받는 직원아이디와 이름, 급여, 커미션, 연봉을 조회하기
-- 연봉은 급여*12 + 급여*커미션*12다. 커미션 금액은 소수점아래를 버린다.
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, COMMISSION_PCT, SALARY*12 + SALARY*COMMISSION_PCT*12 ANNUAL_SALARY 
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL;

-- 관리자 지정되어 있지 않는 직원의 아이디, 이름, 급여, 급여등급을 조회하기
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, S.GRADE
FROM EMPLOYEES E, SALARY_GRADE S
WHERE E.SALARY >= MIN_SALARY AND E.SALARY <= S.MAX_SALARY
AND E.MANAGER_ID IS NULL;

-- 급여를 10000달러 이상 받고, 직종아이디가 'MAN'으로 끝나는 직원의 아이디, 이름, 직종아이디, 급여를 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE SALARY >= 10000
AND JOB_ID LIKE '%MAN';

-- 10,20,40번 부서에 소속된 직원들의 아이디, 이름, 소속부서명을 조회하기
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.DEPARTMENT_ID IN (10, 20, 40);

-- *급여를 10000달러 이상 받는 직원들의 부서이름, 급여, 직원아이디, 이름을 조회하기 
-- *부서이름에 오름차순, 급여에 대한 내림차순으로 정렬해서 조회하시오.
SELECT D.DEPARTMENT_NAME, E.SALARY, E.EMPLOYEE_ID, E.FIRST_NAME
FROM EMPLOYEES E, DEPARTMENTS D 
WHERE E.SALARY >= 10000
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY D.DEPARTMENT_NAME DESC;

-- 오늘을 기준으로 직원들의 근무 개월수를 조회해서 직원아이디, 이름, 입사일, 근무개월수를 조회하기
-- 근무개월 수는 소숫점이하는 버리고, 근무개월수를 기준으로 내림차순 정렬하기
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) WORKING_MONTHS
FROM EMPLOYEES
ORDER BY WORKING_MONTHS DESC;

-- 오늘을 기준으로 일주일전에 입사한 사원의 아이디, 이름, 입사일을 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE >= TRUNC(SYSDATE - 7) AND HIRE_DATE < TRUNC(SYSDATE - 7) + 1;

-- 지난 일주일 동안 입사한 직원 조회
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE TRUNC(SYSDATE) - HIRE_DATE <= 7;

-- 일주일 전에 입사한 사원 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE TRUNC(SYSDATE) - TRUCN(HIRE_DATE) = 7;

--  2007년 상반기에 입사한 사원들의 아이디, 이름, 입사일, 직종아이디를 조회하기
-- 입사일을 기준으로 오름차순 정렬하기
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, JOB_ID
FROM EMPLOYEES
WHERE HIRE_DATE >= '2007/01/01' AND HIRE_DATE < TO_DATE('2007/06/30') + 1
ORDER BY HIRE_DATE ASC;

-- 모든 사원들의 사원아이디, 이름, 급여, 커미션, 연봉, 급여등급을 조회하고 급여등급에 대한 내림차순으로 조회한다.
-- 연봉은 급여*12 + 급여*커미션*12다. 커미션 금액은 소수점아래를 버린다.
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, E.COMMISSION_PCT, 
       E.SALARY*12 + E.SALARY*NVL(COMMISSION_PCT, 0)*12 ANNUAL_SALARY
FROM EMPLOYEES E, SALARY_GRADE S 
WHERE E.SALARY >= S.MIN_SALARY AND E.SALARY <= S.MAX_SALARY 
ORDER BY S.GRADE DESC;

-- 급여를 15000달러 이상 받으면 10% 급여인상, 10000달러 이상 받으면 15% 급여인상, 그외는 20% 급여가 인상된 값으로 조회하기
-- 사원아이디, 이름, 급여, 인상된 급여를 조회한다. case  ~ when 사용
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, 
       CASE
            WHEN SALARY >= 15000 THEN SALARY + SALARY*0.1
            WHEN SALARY >= 10000 THEN SALARY + SALARY*0.15
            ELSE SALARY + SALARY*0.2
       END AS INCREASED_SALARY
FROM EMPLOYEES;

-- 부서번호가 10번인 사원 10% 급여인상, 20번인 사원 15% 급여인상, 그외 20% 급여가 인상된 값을 조회하기
-- 사원아이디, 이름, 급여, 인상된 급여를 조회한다. decode() 함수 사용
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY,
       DECODE(DEPARTMENT_ID, 10, SALARY + SALARY*0.1,
                             20, SALARY + SALARY*0.15,
                             SALARY + SALARY*0.2) AS INCREASED_SALARY
FROM EMPLOYEES;                             

-- 사원아이디, 사원이름, 사원이 소속된 부서번호와 부서이름을 조회하기
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 부서아이디, 부서이름, 부서담당자아이디, 부서담당자 이름 조회하기
SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, D.MANAGER_ID, E.FIRST_NAME
FROM DEPARTMENTS D, EMPLOYEES E
WHERE D.MANAGER_ID = E.EMPLOYEE_ID(+)
ORDER BY D.DEPARTMENT_ID;

-- 사원의 아이디, 사원이름, 소속부서 아이디, 소속부서이름, 소속부서가 위치한 도시 조회하기
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.CITY 
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID;

-- 부서아이디, 부서이름, 부서담당자아이디, 부서담당자 이름, 그 부서가 위치한 도시 조회하기
SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, D.MANAGER_ID, E.FIRST_NAME, L.CITY
FROM DEPARTMENTS D, EMPLOYEES E, LOCATIONS L
WHERE D.MANAGER_ID = E.EMPLOYEE_ID(+)
AND D.LOCATION_ID = L.LOCATION_ID
ORDER BY DEPARTMENT_ID;

-- 사원 아이디, 사원이름, 자신의 매니저 아이디, 매니저 이름 조회하기
SELECT EMP.EMPLOYEE_ID EMP_ID, EMP.FIRST_NAME EMP_NAME, MGR.EMPLOYEE_ID MGR_ID, MGR.FIRST_NAME MGR_NAME
FROM EMPLOYEES EMP, EMPLOYEES MGR
WHERE EMP.MANAGER_ID = MGR.EMPLOYEE_ID(+)
ORDER BY EMP.EMPLOYEE_ID;

-- 사원들 중에서 급여를 가장 많이 받는 직원 3명의 직원아이디, 이름, 급여를 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM (SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
      FROM EMPLOYEES
      ORDER BY SALARY DESC)
WHERE ROWNUM <= 3; 

-- 전체 직원의 평균급여보다 많은 급여를 받는 사원의 아이디, 이름, 직종아이디, 급여를 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY)
                FROM EMPLOYEES)
ORDER BY EMPLOYEE_ID;

-- 부서별 급여평균을 조회해서 부서아이디, 평균급여를 표시하기
-- 평균급여는 소숫점이하 부분은 반올림한다.
SELECT DEPARTMENT_ID, ROUND(AVG(SALARY))
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID;

-- 사원수가 가장 많은 부서 2곳의 부서아이디, 부서명, 사원수를 조회하기
SELECT A.DEPARTMENT_ID, D.DEPARTMENT_NAME, A.CNT
FROM (SELECT DEPARTMENT_ID, CNT
      FROM (SELECT DEPARTMENT_ID, COUNT(*) CNT
            FROM EMPLOYEES
            WHERE DEPARTMENT_ID IS NOT NULL
            GROUP BY DEPARTMENT_ID 
            ORDER BY CNT DESC)
      WHERE ROWNUM <= 2) A, DEPARTMENTS D
WHERE A.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY A.CNT DESC;

-- 80번 부서에 소속된 사원들을 급여 순으로 오름차순 정렬해서 랭킹, 사원아이디, 이름, 급여를 조회하기
SELECT SALARY_RANK, EMPLOYEE_ID, FIRST_NAME, SALARY
FROM (SELECT DENSE_RANK() OVER (ORDER BY SALARY ASC) SALARY_RANK,
             EMPLOYEE_ID, FIRST_NAME, SALARY
      FROM EMPLOYEES
      WHERE DEPARTMENT_ID = 80);

-- 사원들을 급여순으로 정렬하고, 순번을 부여했을 때 6~10번째에 속하는 사원들의 순번, 사원아이디, 이름, 급여를 조회하기
SELECT SALARY_ROW_NUMBER, EMPLOYEE_ID, FIRST_NAME, SALARY
FROM (SELECT ROW_NUMBER() OVER (ORDER BY SALARY DESC) SALARY_ROW_NUMBER,
             EMPLOYEE_ID, FIRST_NAME, SALARY
      FROM EMPLOYEES)
WHERE SALARY_ROW_NUMBER >= 6 AND SALARY_ROW_NUMBER <= 10;
 
-- Employees 테이블에서 관리자별 사원수를 계산하고, 그 관리자의 이름과 관리하는 사원수를 조회하기
SELECT MGR.EMPLOYEE_ID, MGR.FIRST_NAME, EMP.CNT
FROM (SELECT MANAGER_ID, COUNT(*) CNT
      FROM EMPLOYEES 
      WHERE MANAGER_ID IS NOT NULL
      GROUP BY MANAGER_ID) EMP, EMPLOYEES MGR
WHERE EMP.MANAGER_ID = MGR.EMPLOYEE_ID;
